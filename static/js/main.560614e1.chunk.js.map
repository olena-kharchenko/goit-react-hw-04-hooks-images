{"version":3,"sources":["components/Searchbar/Searchbar.js","components/services/images-api.js","components/ImagesErrorView/ImagesErrorView.js","components/ImagePendingView/ImagePendingView.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/ImagesInfo/ImagesInfo.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","imageName","setImageName","className","event","preventDefault","trim","toast","value","onChange","currentTarget","toLowerCase","type","autoComplete","autoFocus","placeholder","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","ImagesErrorView","message","role","ImagePendingView","color","height","width","Component","modalRoot","document","querySelector","Modal","src","alt","onClose","isFirstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","target","ImageGalleryItem","largeImageUrl","showModal","setShowModal","toggleModal","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","Button","setTimeout","scrollBy","top","documentElement","clientHeight","behavior","Status","ImagesInfo","setImages","error","setError","status","setStatus","setPage","imagesAPI","newImages","total","prevImages","hits","catch","err","console","log","prevPage","App","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.560614e1.chunk.js","sourcesContent":["import { ImSearch } from 'react-icons/im';\nimport { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PropTypes from 'prop-types';\n\nfunction Searchbar({ onSubmit }) {\n  const [imageName, setImageName] = useState('');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (imageName.trim() === '') {\n      toast('Please enter search query');\n      return;\n    }\n\n    onSubmit(imageName);\n\n    setImageName('');\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <input\n          value={imageName}\n          onChange={event =>\n            setImageName(event.currentTarget.value.toLowerCase())\n          }\n          className=\"SearchForm-input\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <ImSearch />\n        </button>\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","function fetchImages(name, page) {\n  return fetch(\n    `https://pixabay.com/api/?q=${name}&page=${page}&key=18452046-d075d28130c097165687e8e16&image_type=photo&orientation=horizontal&per_page=12`,\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    return Promise.reject(new Error('No response from server'));\n  });\n}\n\nconst api = { fetchImages };\n\nexport default api;\n","import PropTypes from 'prop-types';\n\nfunction ImagesErrorView({ message }) {\n  return (\n    <div role=\"alert\">\n      <p>Sorry, something went wrong. Error: {message}</p>\n    </div>\n  );\n}\n\nImagesErrorView.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default ImagesErrorView;\n","import React, { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nclass ImagePendingView extends Component {\n  render() {\n    return (\n      <Loader\n        className=\"Loader\"\n        type=\"Oval\"\n        color=\"#303f9f\"\n        height={80}\n        width={80}\n      />\n    );\n  }\n}\n\nexport default ImagePendingView;\n","import { useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nfunction Modal({ src, alt, onClose }) {\n  const isFirstRender = useRef(true);\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      window.addEventListener('keydown', handleKeyDown);\n      isFirstRender.current = false;\n      return;\n    }\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      onClose();\n    }\n  };\n\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        <img src={src} alt={alt} />\n      </div>\n    </div>,\n    modalRoot,\n  );\n}\n\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '../Modal';\n\nfunction ImageGalleryItem({ src, alt, largeImageUrl }) {\n  const [showModal, setShowModal] = useState(false);\n\n  const toggleModal = () => setShowModal(!showModal);\n\n  return (\n    <li className=\"ImageGalleryItem\">\n      <img\n        onClick={toggleModal}\n        src={src}\n        alt={alt}\n        className=\"ImageGalleryItemImage\"\n      />\n      {showModal && (\n        <Modal onClose={toggleModal} src={largeImageUrl} alt={alt} />\n      )}\n    </li>\n  );\n}\n\nImageGalleryItem.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  largeImageUrl: PropTypes.string.isRequired,\n};\n\nexport default ImageGalleryItem;\n","import PropTypes from 'prop-types';\nimport ImageGalleryItem from '../ImageGalleryItem';\n\nfunction ImageGallery({ images }) {\n  return (\n    <ul className=\"ImageGallery\">\n      {images.map((image, index) => (\n        <ImageGalleryItem\n          src={image.webformatURL}\n          alt={image.tags}\n          largeImageUrl={image.largeImageURL}\n          key={index}\n        />\n      ))}\n    </ul>\n  );\n}\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n\nexport default ImageGallery;\n","import PropTypes from 'prop-types';\n\nfunction Button({ onClick }) {\n  const scroll = () => {\n    onClick();\n    setTimeout(() => {\n      window.scrollBy({\n        top: document.documentElement.clientHeight - 130,\n        behavior: 'smooth',\n      });\n    }, 500);\n  };\n\n  return (\n    <button onClick={scroll} className=\"Button\" type=\"button\">\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport imagesAPI from '../services/images-api';\nimport ImagesErrorView from '../ImagesErrorView';\nimport ImagePendingView from '../ImagePendingView';\nimport ImageGallery from '../ImageGallery';\nimport Button from '../Button';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction ImagesInfo({ imageName }) {\n  const [images, setImages] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    if (imageName === '') {\n      console.log('Имени нет');\n      return;\n    }\n\n    setStatus(Status.PENDING);\n\n    imagesAPI\n      .fetchImages(imageName, page)\n      .then(newImages => {\n        if (newImages.total !== 0) {\n          setImages(prevImages => [...prevImages, ...newImages.hits]);\n          setStatus(Status.RESOLVED);\n        } else return Promise.reject(new Error('Invalid request'));\n      })\n      .catch(err => {\n        setError(err);\n        setStatus(Status.REJECTED);\n      });\n  }, [imageName, page]);\n\n  if (status === Status.IDLE) {\n    return <p>Please enter your search term</p>;\n  }\n\n  if (status === Status.PENDING) {\n    return <ImagePendingView />;\n  }\n\n  if (status === Status.REJECTED) {\n    return <ImagesErrorView message={error.message} />;\n  }\n\n  if (status === Status.RESOLVED) {\n    return (\n      <>\n        <ImageGallery images={images} />\n        <Button onClick={() => setPage(prevPage => prevPage + 1)} />\n      </>\n    );\n  }\n}\n\nImagesInfo.propTypes = {\n  imageName: PropTypes.string.isRequired,\n};\n\nexport default ImagesInfo;\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport Searchbar from './components/Searchbar';\nimport ImagesInfo from './components/ImagesInfo';\n\nfunction App() {\n  const [imageName, setImageName] = useState('');\n\n  return (\n    <>\n      <Searchbar onSubmit={setImageName} />\n      <ImagesInfo imageName={imageName} />\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// const elem1 = <span>Привет</span>;\n// const elem2 = <span>мир</span>;\n\n// const element = (\n//   <div>\n//     {elem1}\n//     {elem2}\n//   </div>\n// );\n// console.log(element);\n\n// ReactDOM.render(element, document.querySelector(\"#root\"));\n"],"sourceRoot":""}